<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="entity.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="from_role" jdbcType="INTEGER" property="fromRole" />
    <result column="from_id" jdbcType="INTEGER" property="fromId" />
    <result column="from_name" jdbcType="VARCHAR" property="fromName" />
    <result column="to_role" jdbcType="INTEGER" property="toRole" />
    <result column="to_id" jdbcType="INTEGER" property="toId" />
    <result column="message_title" jdbcType="VARCHAR" property="messageTitle" />
    <result column="message_content" jdbcType="VARCHAR" property="messageContent" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="origin_source" jdbcType="INTEGER" property="originSource" />
    <result column="read_state" jdbcType="INTEGER" property="readState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    message_id, from_role, from_id, from_name, to_role, to_id, message_title, message_content, 
    message_type, origin_source, read_state, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <select id="query" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from message
    <where>
      <if test="record.messageId != null">
        message_id = #{record.messageId}
      </if>
      <if test="record.fromRole != null">
        and from_id = #{record.fromId} and from_role = #{record.fromRole}
      </if>
      and (
      to_role = -1 or (to_role = #{user.role} and to_id = #{user.id})
      <if test="user.clazzId &gt; 0">
        or (to_role = 4 and to_id = #{user.clazzId})
      </if>
      )
      <if test="record.messageType != null">
        and message_type = #{record.messageType}
      </if>
    </where>

  </select>
  <insert id="insert" parameterType="entity.Message">
    insert into message (message_id, from_role, from_id, 
      from_name, to_role, to_id, 
      message_title, message_content, message_type, 
      origin_source, read_state, create_time, 
      update_time)
    values (#{messageId,jdbcType=INTEGER}, #{fromRole,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, 
      #{fromName,jdbcType=VARCHAR}, #{toRole,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, 
      #{messageTitle,jdbcType=VARCHAR}, #{messageContent,jdbcType=VARCHAR}, #{messageType,jdbcType=INTEGER}, 
      #{originSource,jdbcType=INTEGER}, #{readState,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="message_id" keyProperty="messageId" parameterType="entity.Message" useGeneratedKeys="true">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="fromRole != null">
        from_role,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="fromName != null">
        from_name,
      </if>
      <if test="toRole != null">
        to_role,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="messageTitle != null">
        message_title,
      </if>
      <if test="messageContent != null">
        message_content,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="originSource != null">
        origin_source,
      </if>
      <if test="readState != null">
        read_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="fromRole != null">
        #{fromRole,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="fromName != null">
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="toRole != null">
        #{toRole,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="messageTitle != null">
        #{messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null">
        #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="originSource != null">
        #{originSource,jdbcType=INTEGER},
      </if>
      <if test="readState != null">
        #{readState,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Message">
    update message
    <set>
      <if test="fromRole != null">
        from_role = #{fromRole,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="fromName != null">
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="toRole != null">
        to_role = #{toRole,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=INTEGER},
      </if>
      <if test="messageTitle != null">
        message_title = #{messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null">
        message_content = #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="originSource != null">
        origin_source = #{originSource,jdbcType=INTEGER},
      </if>
      <if test="readState != null">
        read_state = #{readState,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Message">
    update message
    set from_role = #{fromRole,jdbcType=INTEGER},
      from_id = #{fromId,jdbcType=INTEGER},
      from_name = #{fromName,jdbcType=VARCHAR},
      to_role = #{toRole,jdbcType=INTEGER},
      to_id = #{toId,jdbcType=INTEGER},
      message_title = #{messageTitle,jdbcType=VARCHAR},
      message_content = #{messageContent,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=INTEGER},
      origin_source = #{originSource,jdbcType=INTEGER},
      read_state = #{readState,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>