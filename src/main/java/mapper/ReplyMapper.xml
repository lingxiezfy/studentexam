<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.ReplyMapper" >
  <resultMap id="BaseResultMap" type="entity.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER"/>
    <result column="user_role" property="userRole" jdbcType="INTEGER"/>
    <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="reply_count" property="replyCount" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="entity.Reply" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ReplyWithPostTitle" type="dto.community.ReplyWithPostTitle" extends="ResultMapWithBLOBs" >
    <result column="post_title" property="postTitle" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,user_id, user_role, user_name, post_id, parent_id, reply_count,delete_flag, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <sql id="post_title" >
    post.title as post_title
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByPostId" resultMap="ResultMapWithBLOBs">
      select
      <include refid="Base_Column_List" />
      ,
      <include refid="Blob_Column_List" />
      from reply
        where post_id = #{postId}
    </select>
  <select id="query" resultType="dto.community.ReplyWithPostTitle" parameterType="entity.Reply">
    SELECT reply.id, reply.user_id, reply.user_role, reply.user_name, reply.post_id, reply.parent_id, reply.reply_count, reply.delete_flag, reply.create_time, reply.update_time, reply.content, post.title AS post_title
    from reply left join post on reply.post_id = post.id
    <where>
      <if test="id != null" >
        reply.id = #{id}
      </if>
      <if test="userId != null">
        and reply.user_id = #{userId}
      </if>
      <if test="userRole != null">
        and reply.user_role = #{userRole}
      </if>
      <if test="postId != null" >
        and reply.post_id = #{postId}
      </if>
      <if test="parentId != null" >
        and reply.parent_id = #{parentId}
      </if>
      <if test="deleteFlag != null">
        and reply.delete_flag = #{deleteFlag}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Reply" >
    insert into reply (
                       id,user_id, user_role, user_name,
                       post_id, parent_id,
      reply_count,delete_flag, create_time, update_time,
      content)
    values (
            #{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},#{userRole,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
            #{postId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
            #{replyCount,jdbcType=INTEGER},#{deleteFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
            #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Reply" >
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="replyCount != null" >
        reply_count,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null" >
        #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Reply" >
    update reply
    <set >
      <if test="postId != null" >
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null" >
        reply_count = #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="entity.Reply" >
    update reply
    set post_id = #{postId,jdbcType=INTEGER},
        user_id        = #{userId,jdbcType=INTEGER},
        user_role      = #{userRole,jdbcType=INTEGER},
        user_name      = #{userName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
        delete_flag    = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Reply" >
    update reply
    set post_id = #{postId,jdbcType=INTEGER},
        user_id        = #{userId,jdbcType=INTEGER},
        user_role      = #{userRole,jdbcType=INTEGER},
        user_name      = #{userName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
        delete_flag    = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>